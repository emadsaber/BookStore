[OK]	- Separate models and DTOs in a project
[OK]	- Create a searate project to apply migrations on
[OK]	- Create repositories to handle data operations
[OK]	- Create services to be injected separately from repositories
[OK]	- Add ApiResponse class to handle API replies for UI requests
[OK]	- Add automapper to map data from services to APIs
[OK]	- Add bootstrap for UI
[OK]	- Create UI helpers for ApiRequest handling
		- Add ready made components to UI (SyncFusion or any other components lib)
		- Add AppSettings (DefaultPageSize)
		- Add images for books and users (how to store them with data (FileStream, or binary))
		- Create the rating UI control
[OK]	- Create Repository includes with all Get methods
[OK]	- Authentication and Authorization (Auth0, ...)
		- Sign in with Google, Github, Facebook , LinkedIn
		- Admin control panel (Add Book, Edit Book, View Reviews, Reply to reviews)
		- Complete profile page [with Auth0 management API]
		- Edit review, reply to review
[]	- split components into modules
[]	- Add canDeactivate on edit routes, alert before deactivate
[] 	- make edit forms reactive
[] 	- create validators in shared module
[]	- create rating control in shraed module
[]	- check to find if passing user id is needed in the ApiRequest model, or it can be replaced bt auth token
[]	- Find library to make popups in angular
[]	- Work with mocks in angular app for faster response
[] 	- Localize application using i18n
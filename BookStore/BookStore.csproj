<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>fe9d2376-972d-4988-9c7e-b8bf8000dcbe</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.15" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\dist\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\dist\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\dist\**" />
    <EmbeddedResource Remove="ClientApp\dist\**" />
    <TypeScriptCompile Remove="ClientApp\dist\**" />
    <TypeScriptCompile Remove="ClientApp\node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\api_config.ts" />
    <None Remove="ClientApp\dist\index.html" />
    <None Remove="ClientApp\dist\main-es2015.js" />
    <None Remove="ClientApp\dist\main-es2015.js.map" />
    <None Remove="ClientApp\dist\main-es5.js" />
    <None Remove="ClientApp\dist\main-es5.js.map" />
    <None Remove="ClientApp\dist\polyfills-es2015.js" />
    <None Remove="ClientApp\dist\polyfills-es2015.js.map" />
    <None Remove="ClientApp\dist\polyfills-es5.js" />
    <None Remove="ClientApp\dist\polyfills-es5.js.map" />
    <None Remove="ClientApp\dist\runtime-es2015.js" />
    <None Remove="ClientApp\dist\runtime-es2015.js.map" />
    <None Remove="ClientApp\dist\runtime-es5.js" />
    <None Remove="ClientApp\dist\runtime-es5.js.map" />
    <None Remove="ClientApp\dist\styles.css" />
    <None Remove="ClientApp\dist\styles.css.map" />
    <None Remove="ClientApp\dist\vendor-es2015.js" />
    <None Remove="ClientApp\dist\vendor-es2015.js.map" />
    <None Remove="ClientApp\dist\vendor-es5.js" />
    <None Remove="ClientApp\dist\vendor-es5.js.map" />
    <None Remove="ClientApp\src\app\models\bases\ApiRequest.ts" />
    <None Remove="ClientApp\src\app\models\bases\ApiRequestHelper.ts" />
    <None Remove="ClientApp\src\app\models\bases\ApiResponse.ts" />
    <None Remove="ClientApp\src\app\models\bases\PagedList.ts" />
    <None Remove="ClientApp\src\app\models\dtos\AuthorDto.ts" />
    <None Remove="ClientApp\src\app\models\dtos\BookDto.ts" />
    <None Remove="ClientApp\src\app\models\dtos\ReviewDto.ts" />
    <None Remove="ClientApp\src\app\models\dtos\UserDto.ts" />
    <None Remove="ClientApp\src\app\models\dtos\users\AuthUserDto.ts" />
    <None Remove="ClientApp\src\app\models\ErrorItem.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\auth_config.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BookStore.Core\BookStore.Core.csproj" />
    <ProjectReference Include="..\BookStore.Db\BookStore.Db.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\services\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
